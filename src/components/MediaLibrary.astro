---
interface Props {
  showModal?: boolean;
}

const { showModal = false } = Astro.props;
---

<div class="media-library" x-data="{ isOpen: false, selectedImages: [] }">
  <button 
    @click="isOpen = true"
    class="px-4 py-2 bg-secondary text-burgundy rounded-lg hover:bg-secondary-dark transition-colors"
  >
    Open Media Library
  </button>

  <!-- Modal -->
  <div 
    x-show="isOpen" 
    class="fixed inset-0 bg-burgundy/50 flex items-center justify-center z-50"
    @keydown.escape.window="isOpen = false"
  >
    <div class="bg-card rounded-xl shadow-2xl w-full max-w-5xl max-h-[80vh] overflow-hidden">
      <!-- Header -->
      <div class="p-4 border-b-2 border-default flex justify-between items-center bg-peach">
        <h2 class="text-2xl font-semibold text-heading">Media Library</h2>
        <button 
          @click="isOpen = false"
          class="text-accent hover:text-accent-dark"
        >
          <span class="sr-only">Close</span>
          <svg class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>

      <!-- Toolbar -->
      <div class="p-4 bg-peach-light border-b-2 border-default flex gap-4">
        <label class="relative">
          <input 
            type="file" 
            multiple 
            accept="image/*" 
            class="absolute inset-0 w-full h-full opacity-0 cursor-pointer"
            @change="uploadFiles($event)"
          />
          <span class="px-4 py-2 bg-accent text-white rounded-lg hover:bg-accent-dark transition-colors inline-block">
            Upload Images
          </span>
        </label>
        <button 
          @click="deleteSelected()"
          x-show="selectedImages.length > 0"
          class="px-4 py-2 bg-burgundy text-white rounded-lg hover:bg-burgundy-dark transition-colors"
        >
          Delete Selected
        </button>
      </div>

      <!-- Grid -->
      <div class="p-6 overflow-auto max-h-[60vh]">
        <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4" id="media-grid">
          <!-- Images will be populated here -->
        </div>
      </div>

      <!-- Footer -->
      <div class="p-4 border-t-2 border-default bg-peach flex justify-between items-center">
        <span class="text-body" x-text="'Selected: ' + selectedImages.length"></span>
        <button 
          @click="insertSelected()"
          x-show="selectedImages.length > 0"
          class="px-4 py-2 bg-accent text-white rounded-lg hover:bg-accent-dark transition-colors"
        >
          Insert Selected
        </button>
      </div>
    </div>
  </div>
</div>

<script>
  function uploadFiles(event) {
    const files = event.target.files;
    if (!files) return;

    const formData = new FormData();
    Array.from(files).forEach(file => {
      formData.append('images[]', file);
    });

    fetch('/api/media/upload', {
      method: 'POST',
      body: formData
    })
    .then(response => response.json())
    .then(data => {
      refreshMediaGrid();
    })
    .catch(error => {
      console.error('Upload failed:', error);
    });
  }

  function refreshMediaGrid() {
    fetch('/api/media')
      .then(response => response.json())
      .then(data => {
        const grid = document.getElementById('media-grid');
        grid.innerHTML = data.media.map(item => `
          <div 
            class="relative group aspect-square bg-peach rounded-lg overflow-hidden border-2 border-default hover:border-accent cursor-pointer"
            @click="toggleSelect('${item.id}')"
            :class="{ 'ring-2 ring-accent': selectedImages.includes('${item.id}') }"
          >
            <img 
              src="${item.url}" 
              alt="${item.alt || ''}"
              class="w-full h-full object-cover"
            />
            <div class="absolute inset-0 bg-burgundy/0 group-hover:bg-burgundy/20 transition-colors">
              <div class="absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity">
                <button 
                  class="p-1 bg-white rounded-full shadow-lg"
                  @click.stop="showDetails('${item.id}')"
                >
                  <svg class="w-4 h-4 text-body" viewBox="0 0 20 20" fill="currentColor">
                    <path d="M10 12a2 2 0 100-4 2 2 0 000 4z" />
                    <path fill-rule="evenodd" d="M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z" clip-rule="evenodd" />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        `).join('');
      });
  }

  // Initial load
  refreshMediaGrid();
</script>

<style>
  .media-library {
    @apply font-sans;
  }
</style>
