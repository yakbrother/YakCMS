---
import AdminLayout from '../../../layouts/AdminLayout.astro';

const { id } = Astro.params;
// This would fetch the post data based on the ID
const post = {
	id: id,
	title: '',
	slug: '',
	content: '',
	status: 'draft'
};
---

<AdminLayout title="Edit Post">
	<div class="edit-header">
		<h1>Edit Post</h1>
		<div class="header-actions">
			<button class="button delete">Delete Post</button>
		</div>
	</div>

	<form class="post-form">
		<div class="form-group">
			<label for="title">Title</label>
			<input type="text" id="title" name="title" value={post.title} required>
		</div>

		<div class="form-group">
			<label for="slug">Slug</label>
			<input type="text" id="slug" name="slug" value={post.slug} required>
		</div>

		<div class="form-group">
			<label for="content">Content</label>
			<div class="editor-toolbar">
				<button type="button" class="toolbar-button">B</button>
				<button type="button" class="toolbar-button">I</button>
				<button type="button" class="toolbar-button">H2</button>
				<button type="button" class="toolbar-button">Link</button>
				<button type="button" class="toolbar-button">Image</button>
			</div>
			<textarea id="content" name="content" rows="15" required>{post.content}</textarea>
		</div>

		<div class="sidebar">
			<div class="sidebar-section">
				<h3>Post Settings</h3>
				<div class="form-group">
					<label for="status">Status</label>
					<select id="status" name="status">
						<option value="draft" selected={post.status === 'draft'}>Draft</option>
						<option value="published" selected={post.status === 'published'}>Published</option>
					</select>
				</div>

				<div class="form-group">
					<label for="publishDate">Publish Date</label>
					<input type="datetime-local" id="publishDate" name="publishDate">
				</div>

				<div class="form-group">
					<label for="categories">Categories</label>
					<select id="categories" name="categories" multiple>
						<option value="news">News</option>
						<option value="tutorial">Tutorial</option>
						<option value="update">Update</option>
					</select>
				</div>

				<div class="form-group">
					<label for="tags">Tags</label>
					<input type="text" id="tags" name="tags" placeholder="Enter tags, separated by commas">
				</div>
			</div>

			<div class="sidebar-section">
				<h3>Featured Image</h3>
				<div class="featured-image-upload">
					<input type="file" id="featuredImage" name="featuredImage" accept="image/*">
					<label for="featuredImage" class="upload-label">
						<div class="upload-placeholder">
							<span>Click to upload featured image</span>
						</div>
					</label>
				</div>
			</div>
		</div>

		<div class="form-actions">
			<button type="submit" class="button primary">Update Post</button>
			<a href="/admin/posts" class="button">Cancel</a>
			<button type="button" class="button preview">Preview</button>
		</div>
	</form>
</AdminLayout>

<style>
	.edit-header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		margin-bottom: 2rem;
	}

	.post-form {
		display: grid;
		grid-template-columns: 1fr 300px;
		gap: 2rem;
		margin-bottom: 2rem;
	}

	.form-group {
		margin-bottom: 1.5rem;
	}

	label {
		display: block;
		margin-bottom: 0.5rem;
		font-weight: 500;
	}

	input, textarea, select {
		width: 100%;
		padding: 0.5rem;
		border: 1px solid #ddd;
		border-radius: 4px;
		font-size: 1rem;
	}

	textarea {
		resize: vertical;
	}

	.editor-toolbar {
		margin-bottom: 0.5rem;
		padding: 0.5rem;
		background: #f8f9fa;
		border: 1px solid #ddd;
		border-radius: 4px;
		display: flex;
		gap: 0.5rem;
	}

	.toolbar-button {
		padding: 0.25rem 0.5rem;
		border: none;
		background: white;
		border-radius: 3px;
		cursor: pointer;
	}

	.toolbar-button:hover {
		background: #eee;
	}

	.sidebar {
		grid-column: 2;
		grid-row: 1 / span 3;
	}

	.sidebar-section {
		background: white;
		padding: 1.5rem;
		border-radius: 8px;
		box-shadow: 0 2px 4px rgba(0,0,0,0.1);
		margin-bottom: 1.5rem;
	}

	.sidebar-section h3 {
		margin: 0 0 1rem 0;
	}

	.featured-image-upload {
		position: relative;
	}

	.upload-label {
		display: block;
		cursor: pointer;
	}

	.upload-placeholder {
		border: 2px dashed #ddd;
		border-radius: 4px;
		padding: 2rem;
		text-align: center;
		color: #666;
	}

	.form-actions {
		grid-column: 1 / -1;
		display: flex;
		gap: 1rem;
		padding-top: 1rem;
		border-top: 1px solid #eee;
	}

	.button {
		padding: 0.5rem 1rem;
		border-radius: 4px;
		border: none;
		font-size: 1rem;
		cursor: pointer;
		text-decoration: none;
	}

	.button.primary {
		background: #0066cc;
		color: white;
	}

	.button.delete {
		background: #fee;
		color: #c00;
	}

	.button:not(.primary):not(.delete) {
		background: #f4f4f4;
		color: #333;
	}

	.button:hover {
		opacity: 0.9;
	}

	@media (max-width: 768px) {
		.post-form {
			grid-template-columns: 1fr;
		}

		.sidebar {
			grid-column: 1;
			grid-row: auto;
		}
	}
</style>

<script>
	// Add confirmation for delete action
	const deleteButton = document.querySelector('.button.delete');
	if (deleteButton) {
		deleteButton.addEventListener('click', (e) => {
			e.preventDefault();
			if (confirm('Are you sure you want to delete this post? This action cannot be undone.')) {
				// Handle delete action
			}
		});
	}

	// Auto-generate slug from title
	const titleInput = document.getElementById('title');
	const slugInput = document.getElementById('slug');

	if (titleInput && slugInput) {
		titleInput.addEventListener('input', (e) => {
			const slug = e.target.value
				.toLowerCase()
				.replace(/[^a-z0-9]+/g, '-')
				.replace(/(^-|-$)+/g, '');
			slugInput.value = slug;
		});
	}
</script>
